{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://D%3A/My%20work/Projects/spiritx/Code_Rangers_02/spirit11/app/api/test1/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nexport const GET = async () => {\r\n  try {\r\n    // Simulate fetching users\r\n    const users = [{ id: 1, name: \"John Doe\" }, { id: 2, name: \"Jane Doe\" }];\r\n    return new NextResponse(JSON.stringify(users), { status: 200 });\r\n  } catch (error: any) {\r\n    return new NextResponse(\"Error in fetching users\" + error.message, {\r\n      status: 500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const PATCH = async (request: Request) => {\r\n  try {\r\n    const body = await request.json();\r\n    const { userId, newUsername } = body;\r\n\r\n    if (!userId || !newUsername) {\r\n      return new NextResponse(\r\n        JSON.stringify({ message: \"ID or new username not found\" }),\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Simulate updating a user\r\n    const updatedUser = { id: userId, username: newUsername };\r\n\r\n    return new NextResponse(\r\n      JSON.stringify({ message: \"User is updated\", user: updatedUser }),\r\n      { status: 200 }\r\n    );\r\n  } catch (error: any) {\r\n    return new NextResponse(\"Error in updating user\" + error.message, {\r\n      status: 500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const DELETE = async (request: Request) => {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const userId = searchParams.get(\"userId\");\r\n\r\n    if (!userId) {\r\n      return new NextResponse(JSON.stringify({ message: \"ID not found\" }), {\r\n        status: 400,\r\n      });\r\n    }\r\n\r\n    // Simulate deleting a user\r\n    const deletedUser = { id: userId, name: \"Deleted User\" };\r\n\r\n    return new NextResponse(\r\n      JSON.stringify({ message: \"User is deleted\", user: deletedUser }),\r\n      { status: 200 }\r\n    );\r\n  } catch (error: any) {\r\n      return new NextResponse(\"Error in deleting user\" + error.message, {\r\n        status: 500,\r\n      });\r\n    }\r\n  };"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,MAAM;IACjB,IAAI;QACF,0BAA0B;QAC1B,MAAM,QAAQ;YAAC;gBAAE,IAAI;gBAAG,MAAM;YAAW;YAAG;gBAAE,IAAI;gBAAG,MAAM;YAAW;SAAE;QACxE,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,KAAK,SAAS,CAAC,QAAQ;YAAE,QAAQ;QAAI;IAC/D,EAAE,OAAO,OAAY;QACnB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,4BAA4B,MAAM,OAAO,EAAE;YACjE,QAAQ;QACV;IACF;AACF;AAEO,MAAM,QAAQ,OAAO;IAC1B,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG;QAEhC,IAAI,CAAC,UAAU,CAAC,aAAa;YAC3B,OAAO,IAAI,gIAAA,CAAA,eAAY,CACrB,KAAK,SAAS,CAAC;gBAAE,SAAS;YAA+B,IACzD;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,cAAc;YAAE,IAAI;YAAQ,UAAU;QAAY;QAExD,OAAO,IAAI,gIAAA,CAAA,eAAY,CACrB,KAAK,SAAS,CAAC;YAAE,SAAS;YAAmB,MAAM;QAAY,IAC/D;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAY;QACnB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,2BAA2B,MAAM,OAAO,EAAE;YAChE,QAAQ;QACV;IACF;AACF;AAEO,MAAM,SAAS,OAAO;IAC3B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,CAAC,QAAQ;YACX,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,KAAK,SAAS,CAAC;gBAAE,SAAS;YAAe,IAAI;gBACnE,QAAQ;YACV;QACF;QAEA,2BAA2B;QAC3B,MAAM,cAAc;YAAE,IAAI;YAAQ,MAAM;QAAe;QAEvD,OAAO,IAAI,gIAAA,CAAA,eAAY,CACrB,KAAK,SAAS,CAAC;YAAE,SAAS;YAAmB,MAAM;QAAY,IAC/D;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAY;QACjB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,2BAA2B,MAAM,OAAO,EAAE;YAChE,QAAQ;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}